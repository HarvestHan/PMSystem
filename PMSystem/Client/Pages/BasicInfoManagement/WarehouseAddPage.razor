@using PMSystem.Client.Dialogs;
@using PMSystem.Shared
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject IWarehouseService WarehouseService
@inject IUserService UserService

<MudCard>
    <MudCardContent>
        <EditForm @bind-Model="@WarehouseModel">
            <MudGrid Spacing="2">
                <MudItem lg="6" md="6" sm="6">
                    <MudTextField T="string" Label="仓库编码" Class="mt-3" @bind-Value="@WarehouseModel.warehouse_code" Required="true" RequiredError="仓库编码不能为空！" 
                    Variant="Variant.Outlined"/>
                </MudItem>
                <MudItem lg="6" md="6" sm="6">
                    <MudTextField T="string" Label="仓库名称" Class="mt-3" @bind-Value="@WarehouseModel.warehouse_name" Required="true" RequiredError="仓库名称不能为空！" 
                    Variant="Variant.Outlined"/>
                </MudItem>
                <MudItem lg="12" md="12" sm="12">
					<MudSelect Label="仓库负责人" @bind-Value="@WarehouseModel.principal_" 
							   Variant="Variant.Outlined" Required="true" RequiredError="仓库负责人不能为空！">
						@foreach (var item in Users)
						{
							<MudSelectItem T="UserModel" Value="item" />
						}
					</MudSelect>
				</MudItem>
                <MudItem lg="6" md="6" sm="6">
                    <MudDatePicker T="DateTime" Label="建库日期" @bind-Date="@WarehouseModel.construct_date" Disabled="true" Required="true" RequiredError="日期不能为空！"
                                   Variant="Variant.Outlined"/>
                </MudItem>
                <MudItem lg="12" md="12" sm="12">
                    <MudTextField T="string" Label="备注" @bind-Value="@WarehouseModel.remark" Lines="2" Variant="Variant.Outlined"></MudTextField>
                </MudItem>
           
            </MudGrid>
        </EditForm>
    </MudCardContent>
    <MudCardActions>
        <MudStack Row="true">
            <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="OkClick" Class="ml-auto">确定</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="CancelClick" Class="ml-auto">取消</MudButton>
        </MudStack>
    </MudCardActions>
</MudCard>

@code {
    bool success;
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public WarehouseModel WarehouseModel { get; set; }

    public List<UserModel> Users { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (WarehouseModel is null)
        {
            WarehouseModel = new WarehouseModel();
        }
        WarehouseModel.construct_date = DateTime.Now;
        await GetAll();
    }

    async Task GetAll()
    {
        await GetUsers();
        StateHasChanged();
    }

    async Task GetUsers()
    {
        var result = await UserService.GetUsers();
        if (result.Success)
        {
            Users = result.Data;
        }
    }

    private void OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();
    }

    void OkClick()
    {

        MudDialog.Close(DialogResult.Ok(WarehouseModel));
    }

    void CancelClick()
    {
        MudDialog.Cancel();
    }
}
